"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wyw69y8&pc=9j7^x0%o_1p_=vf0_s2$xrw_s8ib2l5c51d$&)9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third-parties:
    'crispy_forms',
    'crispy_bootstrap4',
    'django_quill',
    'hcaptcha',
    # Apps:
    'account',
    'content',
    'company',
    'subject',
    'quiz',
    'plan',
    'team',
    'investor',
    'notifier',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR.parent / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

STATICFILES_DIRS = [BASE_DIR / "assets"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Custom django user authentication app
AUTH_USER_MODEL = 'account.User'
LOGIN_REDIRECT_URL = "router"
LOGOUT_REDIRECT_URL = "account:login-or-register"


CRISPY_TEMPLATE_PACK = 'bootstrap4'

MESSAGE_TAGS = {messages.ERROR: "danger", messages.INFO: "info"}

X_FRAME_OPTIONS = 'SAMEORIGIN'


# Session management configs

# Set the session age to 2 hours (2 * 60 * 60 seconds)
SESSION_COOKIE_AGE = 6 * 60 * 60  # 2 hours in seconds

# Ensure that sessions are saved immediately after modification
SESSION_SAVE_EVERY_REQUEST = True

# Optionally, make the session cookie secure and HttpOnly for better security
SESSION_COOKIE_SECURE = True  # Set to True if using HTTPS
SESSION_COOKIE_HTTPONLY = True

# Ensure the session engine is properly set
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # or another session backend if you prefer

# Optionally, expire sessions when the browser is closed
SESSION_EXPIRE_AT_BROWSER_CLOSE = True


HCAPTCHA_SITEKEY = 'fcea3f06-fba6-466a-9a00-3d169a40a4b8'
HCAPTCHA_SECRET = 'ES_4b8f00cc60b041fb9125852a616f2b01'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'sms': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}